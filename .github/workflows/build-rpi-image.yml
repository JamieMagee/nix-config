name: build-rpi-image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-rpi-image:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install nix
        uses: DeterminateSystems/nix-installer-action@786fff0690178f1234e4e1fe9b536e94f5433196 # v20

      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: jamiemagee
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build SD card image
        run: |
          nix build '.#nixosConfigurations.rpi5.config.system.build.sdImage'

          # Create a more descriptive filename
          COMMIT_SHA="${GITHUB_SHA:0:8}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          IMAGE_NAME="nixos-rpi5-${TIMESTAMP}-${COMMIT_SHA}"

          # Find the built image
          IMAGE_PATH=$(readlink -f result)
          if [ -d "$IMAGE_PATH/sd-image" ]; then
            IMAGE_FILE=$(find "$IMAGE_PATH/sd-image" -name "*.img*" | head -1)
          else
            IMAGE_FILE=$(find "$IMAGE_PATH" -name "*.img*" | head -1)
          fi

          if [ -z "$IMAGE_FILE" ]; then
            echo "Error: Could not find built image file"
            find "$IMAGE_PATH" -type f -name "*img*" || true
            exit 1
          fi

          echo "Found image: $IMAGE_FILE"

          # Copy and rename the image
          cp "$IMAGE_FILE" "${IMAGE_NAME}.img.zst"

          # Store image info for later steps
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "IMAGE_FILE=${IMAGE_NAME}.img.zst" >> $GITHUB_ENV

      - name: Upload SD card image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ env.IMAGE_NAME }}
          path: ${{ env.IMAGE_FILE }}
